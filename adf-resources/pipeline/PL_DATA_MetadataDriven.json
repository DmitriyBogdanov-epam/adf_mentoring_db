{
	"name": "PL_DATA_MetadataDriven",
	"properties": {
		"activities": [
			{
				"name": "ACT_GEN_LCK_GetMetadataFromSQL",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT 1 / 0",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_movies_tControlMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ACT_ITRC_FOR_Tables",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ACT_GEN_LCK_GetMetadataFromSQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('ACT_GEN_LCK_GetMetadataFromSQL').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "ACT_GEN_Copy_DataLakeToSQL",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "FilePath",
											"value": "$$FILEPATH"
										},
										{
											"name": "PipelineID",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@item().FolderName",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item().FileName",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "EXECUTE stg.SP_TruncateTables '@{item().TableName}';",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": true,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": {
									"value": "@item().DIU",
									"type": "Expression"
								},
								"translator": {
									"value": "@json(item().Mapping)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DS_DataLake_MatdataDriven",
									"type": "DatasetReference",
									"parameters": {
										"ContainerName": {
											"value": "@item().ContainerName",
											"type": "Expression"
										},
										"Delimiter": {
											"value": "@item().Delimiter",
											"type": "Expression"
										},
										"Encoding": {
											"value": "@item().Encoding",
											"type": "Expression"
										},
										"QuoteChar": {
											"value": "@item().QuoteChar",
											"type": "Expression"
										},
										"EscapeChar": {
											"value": "@item().EscapeChar",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQL_MetadataDriven",
									"type": "DatasetReference",
									"parameters": {
										"TableSchema": {
											"value": "@item().TableSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "ACT_GEN_SPR_LogCopy",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "ACT_GEN_Copy_DataLakeToSQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[etl].[SP_WriteCopyLog]",
								"storedProcedureParameters": {
									"ActivityJson": {
										"value": {
											"value": "@string(activity('ACT_GEN_Copy_DataLakeToSQL').output)",
											"type": "Expression"
										},
										"type": "String"
									},
									"ActivityName": {
										"value": "ACT_GEN_Copy_DataLakeToSQL",
										"type": "String"
									},
									"PipelineID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineStartDateTime": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SINK_movies",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "ACT_GEN_SPR_LogLoockup",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ACT_GEN_LCK_GetMetadataFromSQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[etl].[SP_WriteLookupLog]",
					"storedProcedureParameters": {
						"ActivityJson": {
							"value": {
								"value": "@string(activity('ACT_GEN_LCK_GetMetadataFromSQL').output)",
								"type": "Expression"
							},
							"type": "String"
						},
						"ActivityName": {
							"value": "ACT_GEN_LCK_GetMetadataFromSQL",
							"type": "String"
						},
						"PipelineID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStartDateTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SINK_movies",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ACT_GEN_SPR_LogLooskupError",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ACT_GEN_LCK_GetMetadataFromSQL",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[etl].[SP_WriteErrorRuns]",
					"storedProcedureParameters": {
						"ActivityName": {
							"value": "ACT_GEN_LCK_GetMetadataFromSQL",
							"type": "String"
						},
						"ErrorCode": {
							"value": {
								"value": "@int(activity('ACT_GEN_LCK_GetMetadataFromSQL').Error.ErrorCode)",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('ACT_GEN_LCK_GetMetadataFromSQL').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"FailureType": {
							"value": {
								"value": "@activity('ACT_GEN_LCK_GetMetadataFromSQL').Error.FailureType",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStartDateTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SINK_movies",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Report Failure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetHTTPURL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": {
						"value": "@activity('GetHTTPURL').output.value",
						"type": "Expression"
					},
					"body": {
						"value": "{\n    \"message\" : \"@{activity('ACT_GEN_LCK_GetMetadataFromSQL').Error.Message}\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"dmytro_bohdanov@epam.com\",\n    \"status\": \"fail\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetHTTPURL",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ACT_GEN_LCK_GetMetadataFromSQL",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@pipeline().globalParameters.AFDNotifyHTTPURLSecret",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net/"
					}
				}
			}
		],
		"variables": {
			"LoockupOutput": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-08-15T08:48:17Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}